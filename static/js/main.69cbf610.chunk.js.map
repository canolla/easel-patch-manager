{"version":3,"sources":["store/actions.ts","store/dispatch.ts","util.ts","components/cable.tsx","components/labelText.tsx","components/fader.tsx","components/knob.tsx","components/section.tsx","components/toggleSwitch.tsx","components/modules/complexOscillator.tsx","components/jack.tsx","components/modules/dualLoPassGates.tsx","components/modules/envelopeGenerator.tsx","components/modules/modulationOscillator.tsx","components/modules/patchbay.tsx","components/modules/pulser.tsx","components/modules/sequencer.tsx","components/modules/topBar.tsx","components/easel.tsx","App.tsx","reportWebVitals.ts","store/reducer.ts","store/store.ts","index.tsx"],"names":["UPDATE_FADER","UPDATE_SWITCH","SET_DRAG_POINT","MAKE_CONNECTION","dispatchUpdateFader","module","param","value","type","dispatchUpdateSwitch","toSVGCoordinate","svg","x","y","point","createSVGPoint","matrixTransform","getScreenCTM","inverse","distance","x0","y0","x1","y1","Math","sqrt","pow","Cable","props","colorIndex","swap","d","pathString","min","max","stroke","fill","strokeWidth","strokeLinecap","LabelText","text","anchor","alignment","className","textAnchor","alignmentBaseline","FADER_HEIGHT","FADER_WIDTH","mapDispatchToProps","FaderView","connect","state","ownProps","patch","fader","color","left","top","label","offset","transform","ref","g","window","PointerEvent","frameRef","undefined","throttled","e","cancelAnimationFrame","requestAnimationFrame","buttons","rect","getBoundingClientRect","eventPoint","ownerSVGElement","clientX","clientY","rectPoint","pointerUpdate","addEventListener","height","width","fillOpacity","rx","r","cx","cy","opacity","MAX_VALUE","KNOB_RADIUS","Knob","minAngle","PI","maxAngle","angle","innerArcFlag","atan2","cos","sin","KNOB_THICKNESS","Section","children","TOGGLE_WIDTH","ToggleSwitch","topOption","middleOption","bottomOption","twoWay","onChange","TOGGLE_HEIGHT","onClick","TOGGLE_HANDLE_RADIUS_RATIO","ConnectionPoint","ComplexOscillatorView","complexOsc","pitch","pitchCV","polarity","keyboard","timbre","timbreCV","timbreKnob","waveshape","DualLoPassGates","EnvelopeGenerator","ModulationOscillator","dispatchSetDragPoint","connectionPoint","id","Jack","arrow","OUTER_RADIUS","x2","y2","Patchbay","PulseOutput","PressureOutput","PitchOutput","SequentialVoltageOutput","RandomOutput","PulserPeriodInput","EnvelopeGeneratorOutput","ModulationOscFrequencyInput","PulserOutput","ModulationOscModulationInput","ComplexOscPitchInput","ComplexOscTimbreInput","LoPassGate1Input","LoPassGate2Input","Pulser","Sequencer","TopBar","ModulationCVOutput","PanelInput","Panel1Output","Panel2Output","EnvelopeDetectorOutput","dispatchMakeConnection","startPoint","startId","endPoint","endId","Easel","dragPoints","connections","svgRef","React","dragStart","setDragStart","dragEnd","setDragEnd","getDragPoint","svgCoordinate","onPointerDown","ev","dragPoint","preventDefault","stopPropagation","onPointerUp","onPointerMove","onPointerLeave","removeEventListener","takenColors","cables","map","c","index","start","find","p","end","nextColor","length","i","viewBox","xmlns","patternUnits","patternTransform","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","sequencer","triggerSelect","stages","voltage1","voltage2","voltage3","voltage4","voltage5","pulse1","pulse2","pulse3","pulse4","pulse5","envelope","attack","sustain","decay","modeSelect","pulser","period","periodCV","modOsc","range","modulationType","frequency","frequencyCV","modulation","modulationCV","gates","gate2Source","gate1Mode","gate2Mode","level1","level1CV","level2","level2CV","random","triggerSource","kind","setDragPoint","result","push","makeConnection","existing","connection","slice","concat","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69cbf610.chunk.js","sourcesContent":["export const UPDATE_FADER = \"UPDATE_FADER\";\nexport const UPDATE_SWITCH = \"UPDATE_SWITCH\";\nexport const SET_DRAG_POINT = \"SET_DRAG_POINT\";\nexport const MAKE_CONNECTION = \"MAKE_CONNECTION\";","// export interface Easel {\n//     sequencer: SequentialVoltageSource;\n//     envelope: EnvelopeGenerator;\n//     pulser: Pulser;\n//     modOsc: ModulationOscillator;\n//     complexOsc: ComplexOscillator;\n//     gates: DualLoPassGate;\n//     random: Random;\n//     connections: boolean[][];\n// }\n\nimport { ConnectionPoint } from \"../components/jack\";\nimport { ComplexOscillator, DualLoPassGate, Easel, EnvelopeGenerator, ModulationOscillator, Pulser, Random, SwitchValue } from \"../types\";\nimport { MAKE_CONNECTION, SET_DRAG_POINT, UPDATE_FADER, UPDATE_SWITCH } from \"./actions\";\n\n\nexport function dispatchUpdateFader(module: \"envelope\", param: keyof EnvelopeGenerator, value: number): any;\nexport function dispatchUpdateFader(module: \"pulser\", param: keyof Pulser, value: number): any;\nexport function dispatchUpdateFader(module: \"modOsc\", param: keyof ModulationOscillator, value: number): any;\nexport function dispatchUpdateFader(module: \"complexOsc\", param: keyof ComplexOscillator, value: number): any;\nexport function dispatchUpdateFader(module: \"gates\", param: keyof DualLoPassGate, value: number): any;\nexport function dispatchUpdateFader(module: \"random\", param: keyof Random, value: number): any;\nexport function dispatchUpdateFader(module: keyof Easel, param: string, value: number) {\n    return {\n        type: UPDATE_FADER,\n        module,\n        param,\n        value\n    };\n};\n\nexport function dispatchUpdateSwitch(module: \"envelope\", param: keyof EnvelopeGenerator, value: SwitchValue): any;\nexport function dispatchUpdateSwitch(module: \"pulser\", param: keyof Pulser, value: SwitchValue): any;\nexport function dispatchUpdateSwitch(module: \"modOsc\", param: keyof ModulationOscillator, value: SwitchValue): any;\nexport function dispatchUpdateSwitch(module: \"complexOsc\", param: keyof ComplexOscillator, value: SwitchValue): any;\nexport function dispatchUpdateSwitch(module: \"gates\", param: keyof DualLoPassGate, value: SwitchValue): any;\nexport function dispatchUpdateSwitch(module: \"random\", param: keyof Random, value: SwitchValue): any;\nexport function dispatchUpdateSwitch(module: keyof Easel, param: string, value: SwitchValue) {\n    return {\n        type: UPDATE_SWITCH,\n        module,\n        param,\n        value\n    };\n};\n\nexport function dispatchSetDragPoint(connectionPoint: ConnectionPoint, id: number, x: number, y: number) {\n    return {\n        type: SET_DRAG_POINT,\n        connectionPoint,\n        id,\n        x,\n        y\n    }\n}\n\nexport function dispatchMakeConnection(startPoint: ConnectionPoint, startId: number, endPoint: ConnectionPoint, endId: number) {\n    return {\n        type: MAKE_CONNECTION,\n        startPoint,\n        startId,\n        endPoint,\n        endId\n    }\n}","import { Easel } from \"./types\";\n\nexport function encodePatch(patch: Easel) {\n    let bytes = \"\";\n\n    forEachValue(patch, (value, bytes) => {\n        addBytes(value, bytes);\n        return 0;\n    });\n\n    return encodeURIComponent(btoa(bytes));\n\n    function addBytes(data: number, numBytes: number) {\n        for (let i = 0; i < numBytes; i++) {\n            bytes += String.fromCharCode((data >> (i * 8)) & 0xff);\n        }\n    }\n}\n\nexport function decodePatch(encoded: string) {\n    const bytes = atob(decodeURIComponent(encoded));\n\n    let offset = 0;\n\n    return forEachValue(emptyPatch(), (value, numBytes) => {\n        let current = 0;\n\n        for (let i = 0; i < numBytes; i++) {\n            current |= (bytes.charCodeAt(offset) << (i * 8))\n            offset++;\n        }\n\n        return current;\n    });\n}\n\nexport function emptyPatch(): Easel {\n    return {\n        sequencer: {\n            triggerSelect: \"bottom\",\n            stages: \"bottom\",\n        \n            voltage1: 0,\n            voltage2: 0,\n            voltage3: 0,\n            voltage4: 0,\n            voltage5: 0,\n            pulse1: \"top\",\n            pulse2: \"top\",\n            pulse3: \"top\",\n            pulse4: \"top\",\n            pulse5: \"top\",\n        },\n        envelope: {\n            attack: 0,\n            sustain: 0,\n            decay: 0,\n            triggerSelect: \"bottom\",\n            modeSelect: \"bottom\",\n        },\n        pulser: {\n            triggerSelect: \"bottom\",\n            modeSelect: \"bottom\",\n            period: 0,\n            periodCV: 0,\n        },\n        modOsc: {\n            keyboard: \"bottom\",\n            waveshape: \"bottom\",\n            range: \"bottom\",\n            modulationType: \"bottom\",\n            frequency: 0,\n            frequencyCV: 0,\n            modulation: 0,\n            modulationCV: 0,\n        },\n        complexOsc: {\n            keyboard: \"bottom\",\n            waveshape: \"bottom\",\n            polarity: \"bottom\",\n            pitch: 0,\n            pitchCV: 0,\n            timbre: 0,\n            timbreCV: 0,\n            timbreKnob: 0,\n        },\n        gates: {\n            gate2Source: \"bottom\",\n            gate1Mode: \"bottom\",\n            gate2Mode: \"bottom\",\n            level1: 0,\n            level1CV: 0,\n            level2: 0,\n            level2CV: 0,\n        },\n        random: {\n            triggerSource: \"bottom\",\n        },\n        connections: [],\n    };\n}\n\nexport function throttle(cb: () => void, interval: number) {\n    let timeout: number | undefined;\n\n    return () => {\n        if (timeout) clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            cb();\n            timeout = undefined;\n        }, interval) as any;\n    }\n}\n\nfunction forEachValue(patch: Easel, cb: (value: number, bytes: number) => number) {\n    const result: any = {};\n    for (const module of Object.keys(patch).sort()) {\n        result[module] = {};\n        for (const param of Object.keys((patch as any)[module]).sort()) {\n            const current = (patch as any)[module][param];\n\n            if (Array.isArray(current)) continue;\n            \n            if (typeof current === \"string\") {\n                const possible = [\"top\", \"bottom\", \"middle\"];\n                result[module][param] = possible[cb(possible.indexOf(current), 1)];\n            }\n            else {\n                result[module][param] = cb(current, 2);\n            }\n        }\n    }\n\n    return result as Easel;\n}\n\nexport function toSVGCoordinate(svg: SVGSVGElement, x: number, y: number) {\n    const point = svg.createSVGPoint();\n    point.x = x;\n    point.y = y;\n    return point.matrixTransform(svg.getScreenCTM()?.inverse());\n}\n\nexport function distance(x0: number, y0: number, x1: number, y1: number) {\n    return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n}","import * as React from \"react\";\nimport { distance } from \"../util\";\n\nexport interface CableProps {\n    x0: number;\n    y0: number;\n    x1: number;\n    y1: number;\n    colorIndex: number;\n}\n\nexport const Cable = (props: CableProps) => {\n    let { x0, y0, x1, y1, colorIndex } = props;\n\n    if (x0 < x1) {\n        let swap = x0;\n        x0 = x1;\n        x1 = swap;\n        swap = y0;\n        y0 = y1;\n        y1 = swap;\n    }\n\n\n    const d = distance(x0, y0, x1, y1);\n    const pathString = `M ${x0} ${y0} q ${(x1 - x0) / 2} ${Math.min(Math.max(10, 200 - d / 10), 100)} ${x1 - x0} ${y1 - y0}`;\n\n    return <>\n            <path\n            d={pathString}\n            stroke=\"var(--color-outline)\"\n            fill=\"none\"\n            strokeWidth={12}\n            strokeLinecap=\"round\"\n            />\n        <path\n            d={pathString}\n            stroke={`var(--color-cable-${colorIndex % 9})`}\n            fill=\"none\"\n            strokeWidth={10}\n            strokeLinecap=\"round\"\n            />\n\n    </>\n}\n","import * as React from \"react\";\n\nimport \"../styles/labelText.css\"\n\nexport interface LabelTextProps {\n    x: number;\n    y: number;\n    text: string;\n    anchor?: \"start\" | \"middle\" | \"end\"\n    alignment?: \"hanging\" | \"middle\" | \"baseline\"\n}\n\nexport const LabelText = (props: LabelTextProps) => {\n    const { x, y, text, anchor, alignment } = props;\n    return <text \n        className=\"easel-text\"\n        x={x}\n        y={y}\n        textAnchor={anchor}\n        alignmentBaseline={alignment}\n        fill=\"var(--color-outline)\">\n            {text}\n        </text>\n}\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { dispatchUpdateFader } from \"../store/dispatch\";\nimport { State } from \"../store/reducer\";\nimport { toSVGCoordinate } from \"../util\";\nimport { LabelText } from \"./labelText\";\n\nexport interface FaderProps {\n    color: string;\n    top: number;\n    left: number;\n    value: number;\n    module: string;\n    fader: string;\n    onChange?: (value: number) => void;\n    label?: string;\n\n    dispatchUpdateFader: (module: string, param: string, value: number) => void;\n}\n\nconst MAX_VALUE = 0xfff;\nconst FADER_HEIGHT = 220;\nconst FADER_WIDTH = 15;\nconst HANDLE_WIDTH = 12;\n\nexport const FaderViewImpl = (props: FaderProps) => {\n    const { color, left, top, label, value, module, fader, dispatchUpdateFader } = props;\n\n    const attachEvents = (g: SVGGElement) => {\n        if (!g) return;\n        if (window.PointerEvent) {\n            const pointerUpdate = (e: PointerEvent) => {\n                if (!e.buttons) return;\n                const rect = g.getBoundingClientRect();\n\n                const eventPoint = toSVGCoordinate(g.ownerSVGElement!, e.clientX, e.clientY);\n                const rectPoint = toSVGCoordinate(g.ownerSVGElement!, rect.left, rect.top);\n\n                dispatchUpdateFader(module, fader, ((1 - ((eventPoint.y - rectPoint.y) / FADER_HEIGHT)) * MAX_VALUE) | 0);\n            }\n\n            let frameRef: number | undefined = undefined;;\n\n            const throttled = (e: PointerEvent) => {\n                if (frameRef) cancelAnimationFrame(frameRef);\n                frameRef = requestAnimationFrame(() => {\n                    frameRef = undefined;\n                    pointerUpdate(e);\n                })\n            }\n\n            g.addEventListener(\"pointerdown\", throttled);\n            g.addEventListener(\"pointermove\", throttled);\n        }\n    }\n\n\n\n    const offset = (1 - (value / MAX_VALUE)) * FADER_HEIGHT;\n\n    return <g transform={`translate(${left}, ${top})`} ref={attachEvents}>\n        <rect className=\"easel-fader-bg\"\n            fill={color}\n            height={FADER_HEIGHT}\n            width={FADER_WIDTH / 3}\n            x={FADER_WIDTH / 3}\n            y={0}\n            fillOpacity=\"0.6\"\n            rx={FADER_WIDTH / 6}\n            stroke=\"var(--color-outline)\" />\n        <rect className=\"easel-fader-bg\"\n            fill={color}\n            height={FADER_HEIGHT - offset}\n            width={FADER_WIDTH / 3}\n            x={FADER_WIDTH / 3}\n            y={offset}\n            rx={FADER_WIDTH / 6}\n            stroke=\"var(--color-outline)\" />\n        <circle className=\"easel-fader-handle\"\n            fill={color}\n            r={HANDLE_WIDTH}\n            cx={FADER_WIDTH / 3 + FADER_WIDTH / 6}\n            cy={offset}\n            stroke=\"var(--color-outline)\" />\n        <rect width={FADER_WIDTH} height={FADER_HEIGHT} x=\"0\" y=\"0\" opacity=\"0\" />\n        {label && <LabelText text={label} x={FADER_WIDTH / 2} y={FADER_HEIGHT + 50} anchor=\"middle\"/>}\n    </g>\n}\n\nfunction mapStateToProps(state: State, ownProps: any) {\n    if (!state) return {};\n\n    return {\n        ...ownProps,\n        value: (state.patch as any)[ownProps.module]?.[ownProps.fader],\n    }\n}\n\nconst mapDispatchToProps = {\n    dispatchUpdateFader,\n};\n\nexport const FaderView = connect(mapStateToProps, mapDispatchToProps)(FaderViewImpl);","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { dispatchUpdateFader } from \"../store/dispatch\";\nimport { State } from \"../store/reducer\";\nimport { toSVGCoordinate } from \"../util\";\n\nexport interface KnobProps {\n    color: string;\n    x: number;\n    y: number;\n    value: number;\n    module: string;\n    fader: string;\n    onChange?: (value: number) => void;\n\n    dispatchUpdateFader: (module: string, param: string, value: number) => void;\n}\n\nconst MAX_VALUE = 0xfff;\nconst KNOB_RADIUS = 25;\nconst KNOB_THICKNESS = 18;\n\nexport const KnobImpl = (props: KnobProps) => {\n    const { color, x, y, value, module, fader, dispatchUpdateFader } = props;\n\n    const minAngle = 135 * Math.PI / 180;\n    const maxAngle = 405 * Math.PI / 180;\n    const angle = minAngle + (value / MAX_VALUE) * (maxAngle - minAngle);\n\n    const attachEvents = (g: SVGGElement) => {\n        if (!g) return;\n        if (window.PointerEvent) {\n            const pointerUpdate = (e: PointerEvent) => {\n                if (!e.buttons) return;\n                const rect = g.getBoundingClientRect();\n\n                const eventPoint = toSVGCoordinate(g.ownerSVGElement!, e.clientX, e.clientY);\n                const rectPoint = toSVGCoordinate(g.ownerSVGElement!, rect.left + rect.width / 2, rect.top + rect.height / 2)\n                let angle = Math.atan2(eventPoint.y - rectPoint.y, eventPoint.x - rectPoint.x);\n                if (angle < minAngle) {\n                    angle += Math.PI * 2\n                }\n                else if (angle > maxAngle) {\n                    angle -= Math.PI * 2\n                }\n\n                if (angle < minAngle || angle > maxAngle) return;\n\n                dispatchUpdateFader(module, fader, Math.min(MAX_VALUE, Math.max(0, (((angle - minAngle) / (maxAngle - minAngle)) * MAX_VALUE)) | 0));\n            }\n\n            let frameRef: number | undefined = undefined;;\n\n            const throttled = (e: PointerEvent) => {\n                if (frameRef) cancelAnimationFrame(frameRef);\n                frameRef = requestAnimationFrame(() => {\n                    frameRef = undefined;\n                    pointerUpdate(e);\n                })\n            }\n\n            g.addEventListener(\"pointerdown\", throttled);\n            g.addEventListener(\"pointermove\", throttled);\n        }\n    }\n\n    const innerArcFlag = angle - minAngle < Math.PI ? \"0\" : \"1\";\n\n    return <g transform={`translate(${x}, ${y})`} ref={attachEvents}>\n        <path\n            d={`M ${Math.cos(minAngle) * KNOB_RADIUS} ${Math.sin(minAngle) * KNOB_RADIUS} A ${KNOB_RADIUS} ${KNOB_RADIUS} 0 1 1 ${Math.cos(maxAngle) * KNOB_RADIUS} ${Math.sin(maxAngle) * KNOB_RADIUS}`}\n            stroke=\"var(--color-outline)\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeWidth={KNOB_THICKNESS + 2}\n        />\n        <path\n            d={`M ${Math.cos(minAngle) * KNOB_RADIUS} ${Math.sin(minAngle) * KNOB_RADIUS} A ${KNOB_RADIUS} ${KNOB_RADIUS} 0 1 1 ${Math.cos(maxAngle) * KNOB_RADIUS} ${Math.sin(maxAngle) * KNOB_RADIUS}`}\n            stroke=\"#dedede\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeWidth={KNOB_THICKNESS}\n        />\n        <path\n            d={`M ${Math.cos(minAngle) * KNOB_RADIUS} ${Math.sin(minAngle) * KNOB_RADIUS} A ${KNOB_RADIUS} ${KNOB_RADIUS} 0 ${innerArcFlag} 1 ${Math.cos(angle) * KNOB_RADIUS} ${Math.sin(angle) * KNOB_RADIUS}`}\n            stroke=\"var(--color-outline)\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeWidth={KNOB_THICKNESS - 2}\n        />\n        <path\n            d={`M ${Math.cos(minAngle) * KNOB_RADIUS} ${Math.sin(minAngle) * KNOB_RADIUS} A ${KNOB_RADIUS} ${KNOB_RADIUS} 0 ${innerArcFlag} 1 ${Math.cos(angle) * KNOB_RADIUS} ${Math.sin(angle) * KNOB_RADIUS}`}\n            stroke={color}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeWidth={KNOB_THICKNESS - 4}\n        />\n        <rect width={KNOB_RADIUS * 2} height={KNOB_RADIUS * 2} x={-KNOB_RADIUS} y={-KNOB_RADIUS} opacity=\"0\" />\n    </g>\n}\n\nfunction mapStateToProps(state: State, ownProps: any) {\n    if (!state) return {};\n\n    return {\n        ...ownProps,\n        value: (state.patch as any)[ownProps.module]?.[ownProps.fader],\n    }\n}\n\nconst mapDispatchToProps = {\n    dispatchUpdateFader,\n};\n\nexport const Knob = connect(mapStateToProps, mapDispatchToProps)(KnobImpl);","import * as React from \"react\";\nimport { LabelText } from \"./labelText\";\n\nexport interface SectionProps {\n    width: number;\n    height: number;\n    left: number;\n    top: number;\n    label?: string;\n    fill?: string;\n}\n\nexport const Section = (props: React.PropsWithChildren<SectionProps>) => {\n    const { width, height, left, top, label, fill, children } = props;\n\n    return <g transform={`translate(${left}, ${top})`}>\n        <rect\n            x={0} y={0}\n            width={width}\n            height={height}\n            strokeWidth={1}\n            fill={fill || \"none\"}\n            stroke=\"var(--color-outline)\"/>\n        {children}\n        {label && <LabelText x={width / 2} y={height - 10} text={label} anchor=\"middle\"/>}\n    </g>\n}","import { connect } from \"react-redux\";\n\nimport { dispatchUpdateSwitch } from \"../store/dispatch\";\nimport { State } from \"../store/reducer\";\n\nimport { SwitchValue } from \"../types\";\nimport { LabelText } from \"./labelText\";\n\nexport interface ToggleSwitchProps {\n    color: string;\n    top: number;\n    left: number;\n\n    topOption?: string;\n    middleOption?: string\n    bottomOption?: string;\n\n    module: string;\n    param: string;\n    twoWay?: boolean;\n\n    value: SwitchValue;\n    onChange: (value: SwitchValue) => void;\n\n\n    dispatchUpdateSwitch: (module: string, param: string, value: SwitchValue) => void;\n}\n\nconst TOGGLE_HEIGHT = 50;\nconst TOGGLE_WIDTH = 20;\nconst TOGGLE_HANDLE_RADIUS_RATIO = 0.75;\n\n\nexport const ToggleSwitchImpl = (props: ToggleSwitchProps) => {\n    const { color, left, top, value, topOption, middleOption, bottomOption, module, param, twoWay, onChange, dispatchUpdateSwitch } = props;\n\n    let cy = TOGGLE_WIDTH / 2;\n\n    if (value === \"middle\") {\n        cy = TOGGLE_HEIGHT / 2;\n    }\n    else if (value === \"bottom\") {\n        cy = TOGGLE_HEIGHT - (TOGGLE_WIDTH / 2);\n    }\n\n    const onClick = () => {\n        switch (value) {\n            case \"bottom\": return dispatchUpdateSwitch(module, param, \"top\");\n            case \"middle\": return dispatchUpdateSwitch(module, param, \"bottom\");\n            case \"top\": return dispatchUpdateSwitch(module, param, twoWay ? \"bottom\" : \"middle\");\n        }\n    }\n\n\n    return <g transform={`translate(${left}, ${top})`} onClick={onClick}>\n        <rect className=\"easel-toggle-bg\"\n            fill={\"#dedede\"}\n            height={TOGGLE_HEIGHT}\n            width={TOGGLE_WIDTH}\n            rx={TOGGLE_WIDTH / 2}\n            stroke=\"var(--color-outline)\"\n            x={0}\n            y={0} />\n        <circle\n            cx={TOGGLE_WIDTH / 2}\n            cy={cy}\n            r={TOGGLE_HANDLE_RADIUS_RATIO * TOGGLE_WIDTH / 2}\n            fill={color}\n            stroke=\"var(--color-outline)\"\n            />\n        {topOption &&\n            <LabelText\n                x={TOGGLE_WIDTH + 15}\n                y={TOGGLE_WIDTH / 2}\n                text={topOption}\n                alignment=\"middle\"\n                />\n        }\n        {middleOption &&\n            <LabelText\n                x={TOGGLE_WIDTH + 15}\n                y={(TOGGLE_HEIGHT / 2)}\n                text={middleOption}\n                alignment=\"middle\"\n                />\n        }\n        {bottomOption &&\n            <LabelText\n                x={TOGGLE_WIDTH + 15}\n                y={TOGGLE_HEIGHT - TOGGLE_WIDTH / 2}\n                text={bottomOption}\n                alignment=\"middle\"\n                />\n        }\n    </g>\n}\n\nfunction mapStateToProps(state: State, ownProps: any) {\n    if (!state) return {};\n\n    return {\n        ...ownProps,\n        value: (state.patch as any)[ownProps.module]?.[ownProps.param],\n    }\n}\n\nconst mapDispatchToProps = {\n    dispatchUpdateSwitch,\n};\n\nexport const ToggleSwitch = connect(mapStateToProps, mapDispatchToProps)(ToggleSwitchImpl);","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { dispatchUpdateFader, dispatchUpdateSwitch } from \"../../store/dispatch\";\nimport { State } from \"../../store/reducer\";\nimport { ComplexOscillator } from \"../../types\";\nimport { FaderView } from \"../fader\";\nimport { Knob } from \"../knob\";\nimport { Section } from \"../section\";\nimport { ToggleSwitch } from \"../toggleSwitch\";\n\nexport interface ComplexOscillatorViewProps extends ComplexOscillator {\n}\n\nexport const ComplexOscillatorViewImpl = (props: ComplexOscillatorViewProps) => {\n    const {\n        pitch,\n        pitchCV,\n        polarity,\n        keyboard,\n        timbre,\n        timbreCV,\n        timbreKnob,\n        waveshape\n    } = props;\n    return <Section left={970} top={120} width={305} height={500}>\n        <Section left={0} top={0} width={305} height={30} label=\"COMPLEX OSCILLATOR\" />\n        <Section left={0} top={30} width={175} height={85} label=\"keyboard\">\n            <ToggleSwitch\n                color=\"var(--color-complex-oscillator)\"\n                top={5}\n                left={32}\n\n                topOption=\"on\"\n                bottomOption=\"off\"\n\n                value={keyboard}\n                twoWay={true}\n                module={\"complexOsc\"} param={\"keyboard\"}\n            />\n        </Section>\n        <Section left={0} top={115} width={175} height={85} label=\"polarity\">\n            <ToggleSwitch\n                color=\"var(--color-complex-oscillator)\"\n                top={5}\n                left={32}\n\n                topOption=\"-\"\n                bottomOption=\"+\"\n\n                value={polarity}\n                twoWay={true}\n                module={\"complexOsc\"} param={\"polarity\"}\n            />\n        </Section>\n        <Section left={175} top={30} width={130} height={170} label=\"timbre\">\n            <Knob\n                x={65}\n                y={45}\n                value={timbreKnob}\n                color=\"var(--color-complex-oscillator)\"\n                module={\"complexOsc\"}\n                fader={\"timbreKnob\"} \n            />\n            <ToggleSwitch\n                color=\"var(--color-complex-oscillator)\"\n                top={90}\n                left={20}\n\n                value={waveshape}\n                module={\"complexOsc\"} param={\"waveshape\"}\n            />\n            <path stroke=\"var(--color-outline)\" strokeWidth=\"1\" fill=\"none\" d=\"m 55 95 m 0 10 l 20 -10 l 0 10 l 20 -10 l 0 10 l 20 -10 l 0 10\" />\n            <path stroke=\"var(--color-outline)\" strokeWidth=\"1\" fill=\"none\" d=\"m 55 110 m 0 10 l 0 -10 l 10 0 l 0 10 l 10 0 l 0 -10 l 10 0 l 0 10 l 10 0 l 0 -10 l 10 0 l 0 10 l 10 0 l 0 -10\" />\n            <path stroke=\"var(--color-outline)\" strokeWidth=\"1\" fill=\"none\" d=\"m 55 125 m 0 10 l 10 -10 l 10 10 l 10 -10 l 10 10 l 10 -10 l 10 10\" />\n        </Section>\n        <Section left={0} top={200} width={305} height={300}>\n            <FaderView left={30} top={20} value={pitchCV} color=\"var(--color-complex-oscillator)\" module={\"complexOsc\"} fader={\"pitchCV\"} />\n            <FaderView left={105} top={20} value={pitch} color=\"var(--color-complex-oscillator)\" label=\"pitch\" module={\"complexOsc\"} fader={\"pitch\"}/>\n            <FaderView left={180} top={20} value={timbreCV} color=\"var(--color-complex-oscillator)\" module={\"complexOsc\"} fader={\"timbreCV\"}/>\n            <FaderView left={255} top={20} value={timbre} color=\"var(--color-complex-oscillator)\" label=\"timbre\" module={\"complexOsc\"} fader={\"timbre\"}/>\n        </Section>\n    </Section>\n}\n\nfunction mapStateToProps(state: State, ownProps: any) {\n    if (!state) return {};\n\n    return {\n        ...state.patch.complexOsc\n    }\n}\n\nconst mapDispatchToProps = {\n    dispatchUpdateFader,\n    dispatchUpdateSwitch\n};\n\nexport const ComplexOscillatorView = connect(mapStateToProps, mapDispatchToProps)(ComplexOscillatorViewImpl);","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { dispatchSetDragPoint } from \"../store/dispatch\";\nimport { State } from \"../store/reducer\";\nimport { toSVGCoordinate } from \"../util\";\nimport { LabelText } from \"./labelText\";\n\nexport enum ConnectionPoint {\n    PulseOutput,\n    PressureOutput,\n    PitchOutput,\n    SequentialVoltageOutput,\n    EnvelopeGeneratorOutput,\n    PulserOutput,\n    RandomOutput,\n    Panel1Output,\n    Panel2Output,\n    EnvelopeDetectorOutput,\n    ModulationCVOutput,\n    PulserPeriodInput,\n    ModulationOscFrequencyInput,\n    ModulationOscModulationInput,\n    ComplexOscPitchInput,\n    ComplexOscTimbreInput,\n    LoPassGate1Input,\n    LoPassGate2Input,\n    PanelInput\n}\n\nexport interface JackProps {\n    x: number;\n    y: number;\n    color: string;\n    connectionPoint: ConnectionPoint;\n    id?: number;\n    arrow?: boolean;\n    text?: string;\n\n    dispatchSetDragPoint: (connectionPoint: ConnectionPoint, id: number, x: number, y: number) => void;\n}\n\nconst OUTER_RADIUS = 25;\nconst INNER_RADIUS = 12;\n\nexport const JackImpl = (props: JackProps) => {\n    const { x, y, text, color, connectionPoint, id, arrow, dispatchSetDragPoint } = props;\n\n    const handleCircleRef = (ref: SVGCircleElement) => {\n        if (ref) {\n            const rect = ref.getBoundingClientRect();\n            const point = toSVGCoordinate(\n                ref.ownerSVGElement!,\n                rect.left + rect.width / 2,\n                rect.top + rect.height / 2\n            )\n            dispatchSetDragPoint(connectionPoint, id || 0, point.x, point.y);\n        }\n    }\n\n    return <>\n        <g transform={`translate(${x} ${y})`}>        \n            <circle\n                ref={handleCircleRef}\n                cx={0}\n                cy={0}\n                r={OUTER_RADIUS}\n                fill={color}\n                stroke=\"var(--color-outline)\" />\n            <circle \n                cx={0}\n                cy={0}\n                r={INNER_RADIUS}\n                fill=\"#dedede\"\n                stroke=\"var(--color-outline)\"  />\n            {text && \n                <LabelText\n                    text={text}\n                    x={0}\n                    y={OUTER_RADIUS + 20}\n                    alignment=\"baseline\"\n                    anchor=\"middle\" />\n            }\n            {arrow &&\n                <g>\n                    <line\n                        x1={0}\n                        y1={-OUTER_RADIUS}\n                        x2={0}\n                        y2={-OUTER_RADIUS - 78}\n                        stroke=\"var(--color-outline)\" />\n                    <path\n                        d={`M 0 ${-OUTER_RADIUS - 80} l ${4} ${10} q ${-4} ${-4} ${-8} ${0} Z`}\n                        fill=\"var(--color-outline)\"\n                    />\n                </g>\n            }\n        </g>\n    </>\n}\n\n\nfunction mapStateToProps(state: State, ownProps: any) {\n    if (!state) return {};\n\n    return {\n        ...ownProps\n    }\n}\n\nconst mapDispatchToProps = {\n    dispatchSetDragPoint,\n};\n\nexport const Jack = connect(mapStateToProps, mapDispatchToProps)(JackImpl);","import * as React from \"react\";\nimport { FaderView } from \"../fader\";\nimport { LabelText } from \"../labelText\";\nimport { Section } from \"../section\";\nimport { ToggleSwitch } from \"../toggleSwitch\";\n\nexport interface DualLoPassGatesProps {\n\n}\n\nexport const DualLoPassGates = (props: DualLoPassGatesProps) => {\n    return <Section left={1275} top={120} width={300} height={500}>\n        <Section left={0} top={0} width={300} height={30} label=\"DUAL LO PASS GATE\" />\n        <Section left={0} top={30} width={300} height={85} label=\"gate 2 source\">\n\n        <ToggleSwitch\n                color=\"var(--color-dual-lo-pass-gate)\"\n                top={5}\n                left={85}\n\n                topOption=\"aux in\"\n                middleOption=\"mod oscillator\"\n                bottomOption=\"gate 1\"\n\n                module={\"gates\"} param={\"gate2Source\"}\n            />\n        </Section>\n        <Section left={0} top={115} width={300} height={85} label=\"mode select\">\n            <ToggleSwitch\n                color=\"var(--color-dual-lo-pass-gate)\"\n                top={5}\n                left={35}\n                label=\"gate 1\"\n\n                module={\"gates\"} param={\"gate1Mode\"}\n            />\n\n            <ToggleSwitch\n                color=\"var(--color-dual-lo-pass-gate)\"\n                top={5}\n                left={245}\n                label=\"gate 2\"\n\n                module={\"gates\"} param={\"gate2Mode\"}\n            />\n\n            <LabelText\n                x={150}\n                y={15}\n                text={\"lopass filter\"}\n                anchor=\"middle\"\n                alignment=\"middle\"\n                />\n\n            <LabelText\n                x={150}\n                y={30}\n                text={\"combination\"}\n                anchor=\"middle\"\n                alignment=\"middle\"\n                />\n\n            <LabelText\n                x={150}\n                y={45}\n                text={\"voltage controlled amp\"}\n                anchor=\"middle\"\n                alignment=\"middle\"\n                />\n        </Section>\n        <Section left={0} top={200} width={300} height={300}>\n            <FaderView left={30} top={20} value={0} color=\"var(--color-dual-lo-pass-gate)\" module={\"gates\"} fader={\"level1CV\"}/>\n            <FaderView left={105} top={20} value={0} color=\"var(--color-dual-lo-pass-gate)\" label=\"gate 1\" module={\"gates\"} fader={\"level1\"}/>\n            <FaderView left={180} top={20} value={0} color=\"var(--color-dual-lo-pass-gate)\" module={\"gates\"} fader={\"level2CV\"}/>\n            <FaderView left={255} top={20} value={0} color=\"var(--color-dual-lo-pass-gate)\" label=\"gate 2\" module={\"gates\"} fader={\"level2\"}/>\n        </Section>\n    </Section>\n}","import * as React from \"react\";\nimport { FaderView } from \"../fader\";\nimport { Section } from \"../section\";\nimport { ToggleSwitch } from \"../toggleSwitch\";\n\nexport interface EnvelopeGeneratorProps {\n\n}\n\nexport const EnvelopeGenerator = (props: EnvelopeGeneratorProps) => {\n    return <Section left={315} top={120} width={200} height={500}>\n        <Section left={0} top={0} width={200} height={30} label=\"ENVELOPE GENERATOR\" />\n        <Section left={0} top={30} width={200} height={85} label=\"trigger select\">\n            <ToggleSwitch\n                color=\"var(--color-envelope-generator)\"\n                top={5}\n                left={35}\n\n                topOption=\"keyboard\"\n                middleOption=\"pulser\"\n                bottomOption=\"sequencer\"\n\n                module={\"envelope\"} param={\"triggerSelect\"}\n            />\n        </Section>\n        <Section left={0} top={115} width={200} height={85} label=\"mode select\">\n            <ToggleSwitch\n                color=\"var(--color-envelope-generator)\"\n                top={5}\n                left={35}\n\n                topOption=\"sustained\"\n                middleOption=\"transient\"\n                bottomOption=\"self\"\n\n                module={\"envelope\"} param={\"modeSelect\"}\n            />\n        </Section>\n        <Section left={0} top={200} width={200} height={300}>\n            <FaderView left={25} top={20} value={0} color=\"var(--color-envelope-generator)\" label=\"attack\" module={\"envelope\"} fader={\"attack\"}/>\n            <FaderView left={90} top={20} value={0} color=\"var(--color-envelope-generator)\" label=\"sustain\" module={\"envelope\"} fader={\"sustain\"}/>\n            <FaderView left={155} top={20} value={0} color=\"var(--color-envelope-generator)\" label=\"decay\" module={\"envelope\"} fader={\"decay\"}/>\n        </Section>\n    </Section>\n}","import * as React from \"react\";\nimport { FaderView } from \"../fader\";\nimport { Section } from \"../section\";\nimport { ToggleSwitch } from \"../toggleSwitch\";\n\nexport interface ModulationOscillatorProps {\n\n}\n\nexport const ModulationOscillator = (props: ModulationOscillatorProps) => {\n    return <Section left={665} top={120} width={305} height={500}>\n        <Section left={0} top={0} width={305} height={30} label=\"MODULATION OSCILLATOR\" />\n        <Section left={0} top={30} width={175} height={85} label=\"keyboard\">\n            <ToggleSwitch\n                color=\"var(--color-modulation-oscillator)\"\n                top={5}\n                left={32}\n\n                topOption=\"on\"\n                bottomOption=\"off\"\n\n                value={\"top\"}\n                twoWay={true}\n                module={\"modOsc\"} param={\"keyboard\"}\n            />\n        </Section>\n        <Section left={175} top={30} width={130} height={85} label=\"waveshape\">\n            <ToggleSwitch\n                color=\"var(--color-modulation-oscillator)\"\n                top={5}\n                left={20}\n\n                value={\"top\"}\n                module={\"modOsc\"} param={\"waveshape\"}\n            />\n            <path stroke=\"var(--color-outline)\" strokeWidth=\"1\" fill=\"none\" d=\"m 55 10 m 0 10 l 20 -10 l 0 10 l 20 -10 l 0 10 l 20 -10 l 0 10\" />\n            <path stroke=\"var(--color-outline)\" strokeWidth=\"1\" fill=\"none\" d=\"m 55 25 m 0 10 l 0 -10 l 10 0 l 0 10 l 10 0 l 0 -10 l 10 0 l 0 10 l 10 0 l 0 -10 l 10 0 l 0 10 l 10 0 l 0 -10\" />\n            <path stroke=\"var(--color-outline)\" strokeWidth=\"1\" fill=\"none\" d=\"m 55 40 m 0 10 l 10 -10 l 10 10 l 10 -10 l 10 10 l 10 -10 l 10 10\" />\n        </Section>\n        <Section left={0} top={115} width={175} height={85} label=\"range\">\n            <ToggleSwitch\n                color=\"var(--color-modulation-oscillator)\"\n                top={5}\n                left={32}\n\n                topOption=\"high\"\n                bottomOption=\"low\"\n\n                value={\"top\"}\n                twoWay={true}\n                module={\"modOsc\"} param={\"range\"}\n            />\n        </Section>\n        <Section left={175} top={115} width={130} height={85} label=\"modulation\">\n            <ToggleSwitch\n                color=\"var(--color-modulation-oscillator)\"\n                top={5}\n                left={20}\n\n                topOption=\"bal. ext\"\n                middleOption=\"a.m. osc.\"\n                bottomOption=\"f.m. osc.\"\n\n                value={\"top\"}\n                module={\"modOsc\"} param={\"modulationType\"}\n            />\n        </Section>\n        <Section left={0} top={200} width={305} height={300}>\n            <FaderView left={30} top={20} value={0} color=\"var(--color-modulation-oscillator)\" module={\"modOsc\"} fader={\"frequencyCV\"}/>\n            <FaderView left={105} top={20} value={0} color=\"var(--color-modulation-oscillator)\" label=\"frequency\" module={\"modOsc\"} fader={\"frequency\"}/>\n            <FaderView left={180} top={20} value={0} color=\"var(--color-modulation-oscillator)\" module={\"modOsc\"} fader={\"modulationCV\"}/>\n            <FaderView left={255} top={20} value={0} color=\"var(--color-modulation-oscillator)\" label=\"modulation\" module={\"modOsc\"} fader={\"modulation\"}/>\n        </Section>\n    </Section>\n}","import * as React from \"react\";\nimport { Jack, ConnectionPoint } from \"../jack\";\nimport { Section } from \"../section\";\nimport { ToggleSwitch } from \"../toggleSwitch\";\n\nexport interface PatchbayProps {\n\n}\n\nexport const Patchbay = (props: PatchbayProps) => {\n    return <Section left={0} top={620} width={1575} height={120}>\n        <Section left={0} top={0} width={250} height={120}>\n            <Section left={0} top={0} width={250} height={30} label=\"KEYBOARD OUTPUT\" />\n            <Jack\n                x={35}\n                y={65}\n                color=\"var(--color-keyboard-pulse)\"\n                connectionPoint={ConnectionPoint.PulseOutput}\n                text=\"pulse\" />\n            <Jack\n                x={125}\n                y={65}\n                color=\"var(--color-keyboard-pressure)\"\n                connectionPoint={ConnectionPoint.PressureOutput}\n                id={0}\n                text=\"pressure\" />\n            <Jack\n                x={215}\n                y={65}\n                color=\"var(--color-keyboard-pitch)\"\n                connectionPoint={ConnectionPoint.PitchOutput}\n                text=\"pitch\" />\n        </Section>\n        <Section left={250} top={0} width={160} height={120}>\n            <Section left={0} top={0} width={160} height={30} label=\"RANDOM VOLTAGE\" />\n\n            <Section left={0} top={30} width={160} height={90} label=\"trigger source\">\n                <ToggleSwitch\n                    color=\"var(--color-random-voltage)\"\n                    top={5}\n                    left={32}\n\n                    topOption=\"keyboard\"\n                    middleOption=\"pulser\"\n                    bottomOption=\"sequencer\"\n\n                    value={\"top\"}\n                    module={\"random\"} param={\"triggerSource\"}\n                />\n            </Section>\n        </Section>\n        <Section left={410} top={0} width={1165} height={120}>\n            <Jack\n                x={70}\n                y={30}\n                color=\"var(--color-sequencer)\"\n                connectionPoint={ConnectionPoint.SequentialVoltageOutput}\n                id={0} />\n            <Jack\n                x={70}\n                y={90}\n                color=\"var(--color-random-voltage)\"\n                connectionPoint={ConnectionPoint.RandomOutput}\n                id={0} />\n            <Jack\n                x={143}\n                y={60}\n                color=\"var(--color-input)\"\n                arrow={true}\n                connectionPoint={ConnectionPoint.PulserPeriodInput}\n                id={0} />\n\n            <Jack\n                x={218}\n                y={30}\n                color=\"var(--color-envelope-generator)\"\n                connectionPoint={ConnectionPoint.EnvelopeGeneratorOutput}\n                id={0} />\n            <Jack\n                x={218}\n                y={90}\n                color=\"var(--color-keyboard-pressure)\"\n                connectionPoint={ConnectionPoint.PressureOutput}\n                id={1} />\n            <Jack\n                x={293}\n                y={60}\n                color=\"var(--color-input)\"\n                arrow={true}\n                connectionPoint={ConnectionPoint.ModulationOscFrequencyInput} />\n\n\n            <Jack\n                x={368}\n                y={30}\n                color=\"var(--color-pulser)\"\n                connectionPoint={ConnectionPoint.PulserOutput}\n                id={1} />\n            <Jack\n                x={368}\n                y={90}\n                color=\"var(--color-random-voltage)\"\n                connectionPoint={ConnectionPoint.RandomOutput}\n                id={1} />\n            <Jack\n                x={443}\n                y={60}\n                color=\"var(--color-input)\"\n                arrow={true}\n                connectionPoint={ConnectionPoint.ModulationOscModulationInput} />\n\n\n            <Jack\n                x={518}\n                y={30}\n                color=\"var(--color-sequencer)\"\n                connectionPoint={ConnectionPoint.SequentialVoltageOutput}\n                id={1} />\n            <Jack\n                x={518}\n                y={90}\n                color=\"var(--color-keyboard-pressure)\"\n                connectionPoint={ConnectionPoint.PressureOutput}\n                id={2} />\n            <Jack\n                x={598}\n                y={60}\n                color=\"var(--color-input)\"\n                arrow={true}\n                connectionPoint={ConnectionPoint.ComplexOscPitchInput} />\n\n\n            <Jack\n                x={673}\n                y={30}\n                color=\"var(--color-envelope-generator)\"\n                connectionPoint={ConnectionPoint.EnvelopeGeneratorOutput}\n                id={1} />\n            <Jack\n                x={673}\n                y={90}\n                color=\"var(--color-random-voltage)\"\n                connectionPoint={ConnectionPoint.RandomOutput}\n                id={2} />\n            <Jack\n                x={748}\n                y={60}\n                color=\"var(--color-input)\"\n                arrow={true}\n                connectionPoint={ConnectionPoint.ComplexOscTimbreInput} />\n\n            <Jack\n                x={823}\n                y={30}\n                color=\"var(--color-pulser)\"\n                connectionPoint={ConnectionPoint.PulserOutput}\n                id={2} />\n            <Jack\n                x={823}\n                y={90}\n                color=\"var(--color-keyboard-pressure)\"\n                connectionPoint={ConnectionPoint.PressureOutput}\n                id={3} />\n            <Jack\n                x={903}\n                y={60}\n                color=\"var(--color-input)\"\n                arrow={true}\n                connectionPoint={ConnectionPoint.LoPassGate1Input} />\n            \n            <Jack\n                x={978}\n                y={30}\n                color=\"var(--color-envelope-generator)\"\n                connectionPoint={ConnectionPoint.EnvelopeGeneratorOutput}\n                id={2} />\n            <Jack\n                x={978}\n                y={90}\n                color=\"var(--color-random-voltage)\"\n                connectionPoint={ConnectionPoint.RandomOutput}\n                id={3} />\n            <Jack\n                x={1053}\n                y={60}\n                color=\"var(--color-input)\"\n                arrow={true}\n                connectionPoint={ConnectionPoint.LoPassGate2Input} />\n        \n            <Jack\n                x={1128}\n                y={30}\n                color=\"var(--color-pulser)\"\n                connectionPoint={ConnectionPoint.PulserOutput}\n                id={3} />\n            <Jack\n                x={1128}\n                y={90}\n                color=\"var(--color-keyboard-pressure)\"\n                connectionPoint={ConnectionPoint.PressureOutput}\n                id={4} />\n            \n        </Section>\n    </Section>\n}","import * as React from \"react\";\nimport { FaderView } from \"../fader\";\nimport { Section } from \"../section\";\nimport { ToggleSwitch } from \"../toggleSwitch\";\n\nexport interface PulserProps {\n\n}\n\nexport const Pulser = (props: PulserProps) => {\n    return <Section left={515} top={120} width={150} height={500}>\n        <Section left={0} top={0} width={150} height={30} label=\"PULSER\" />\n        <Section left={0} top={30} width={150} height={85} label=\"trigger select\">\n            <ToggleSwitch\n                color=\"var(--color-pulser)\"\n                top={5}\n                left={32}\n\n                topOption=\"keyboard\"\n                middleOption=\"self\"\n                bottomOption=\"sequencer\"\n\n                value={\"top\"}\n                module={\"pulser\"} param={\"triggerSelect\"}\n            />\n        </Section>\n        <Section left={0} top={115} width={150} height={85} label=\"mode\">\n            <ToggleSwitch\n                color=\"var(--color-pulser)\"\n                top={5}\n                left={32}\n\n                topOption=\"triggered\"\n                middleOption=\"off\"\n                bottomOption=\"once\"\n\n                value={\"top\"}\n                module={\"pulser\"} param={\"modeSelect\"}\n            />\n        </Section>\n        <Section left={0} top={200} width={150} height={300}>\n            <FaderView left={30} top={20} value={0} color=\"var(--color-pulser)\" module={\"pulser\"} fader={\"periodCV\"}/>\n            <FaderView left={105} top={20} value={0} color=\"var(--color-pulser)\" label=\"period\" module={\"pulser\"} fader={\"period\"}/>\n        </Section>\n    </Section>\n}","import * as React from \"react\";\nimport { FaderView } from \"../fader\";\nimport { LabelText } from \"../labelText\";\nimport { Section } from \"../section\";\nimport { ToggleSwitch } from \"../toggleSwitch\";\n\nexport interface SequencerProps {\n\n}\n\nexport const Sequencer = (props: SequencerProps) => {\n    return <Section left={0} top={120} width={315} height={500}>\n        <Section left={0} top={0} width={315} height={30} label=\"SEQUENTIAL VOLTAGE SOURCE\" />\n        <Section left={0} top={30} width={175} height={85} label=\"trigger select\">\n            <ToggleSwitch\n                color=\"var(--color-sequencer)\"\n                top={5}\n                left={35}\n\n                topOption=\"keyboard\"\n                middleOption=\"pulser\"\n                bottomOption=\"off\"\n\n                value={\"top\"}\n                module={\"sequencer\"} param={\"triggerSelect\"}\n            />\n        </Section>\n        <Section left={175} top={30} width={140} height={85} label=\"stages\">\n            <ToggleSwitch\n                color=\"var(--color-sequencer)\"\n                top={5}\n                left={40}\n\n                topOption=\"3\"\n                middleOption=\"4\"\n                bottomOption=\"5\"\n\n                value={\"top\"}\n                module={\"sequencer\"} param={\"stages\"}\n            />\n        </Section>\n        <Section left={0} top={115} width={315} height={85} label=\"pulse sequence\">\n            <LabelText x={25} y={20} text=\"1\" />\n            <LabelText x={80} y={20} text=\"2\" />\n            <LabelText x={135} y={20} text=\"3\" />\n            <LabelText x={190} y={20} text=\"4\" />\n            <LabelText x={245} y={20} text=\"5\" />\n            <ToggleSwitch\n                color=\"var(--color-sequencer)\"\n                top={5}\n                left={42}\n\n                value={\"top\"}\n                twoWay={true}\n                module={\"sequencer\"} param={\"pulse1\"}\n            />\n            <ToggleSwitch\n                color=\"var(--color-sequencer)\"\n                top={5}\n                left={97}\n\n                value={\"top\"}\n                twoWay={true}\n                module={\"sequencer\"} param={\"pulse2\"}\n            />\n            <ToggleSwitch\n                color=\"var(--color-sequencer)\"\n                top={5}\n                left={152}\n\n                value={\"top\"}\n                twoWay={true}\n                module={\"sequencer\"} param={\"pulse3\"}\n            />\n            <ToggleSwitch\n                color=\"var(--color-sequencer)\"\n                top={5}\n                left={207}\n\n                value={\"top\"}\n                twoWay={true}\n                module={\"sequencer\"} param={\"pulse4\"}\n            />\n            <ToggleSwitch\n                color=\"var(--color-sequencer)\"\n                top={5}\n                left={262}\n\n                value={\"top\"}\n                twoWay={true}\n                module={\"sequencer\"} param={\"pulse5\"}\n            />\n        </Section>\n        <Section left={0} top={200} width={315} height={300} label=\"sequencer voltage levels\">\n            <FaderView left={52} top={20} value={800} color=\"var(--color-sequencer)\" module={\"sequencer\"} fader={\"voltage1\"}/>\n            <FaderView left={107} top={20} value={1500} color=\"var(--color-sequencer)\" module={\"sequencer\"} fader={\"voltage2\"}/>\n            <FaderView left={162} top={20} value={2500} color=\"var(--color-sequencer)\" module={\"sequencer\"} fader={\"voltage3\"}/>\n            <FaderView left={217} top={20} value={0} color=\"var(--color-sequencer)\" module={\"sequencer\"} fader={\"voltage4\"}/>\n            <FaderView left={272} top={20} value={0} color=\"var(--color-sequencer)\" module={\"sequencer\"} fader={\"voltage5\"}/>\n        </Section>\n    </Section>\n}","import * as React from \"react\";\nimport { Jack, ConnectionPoint } from \"../jack\";\nimport { Section } from \"../section\";\nimport { ToggleSwitch } from \"../toggleSwitch\";\n\nexport interface TopBarProps {\n\n}\n\nexport const TopBar = (props: TopBarProps) => {\n    return <Section left={0} top={0} width={1575} height={120}>\n        <Section left={0} top={0} width={970} height={120}>\n            <Section left={0} top={0} width={970} height={30} label=\"EASEL PROGRAM MANAGER\" />\n            <Jack\n                x={915}\n                y={65}\n                color=\"var(--color-modulation-oscillator)\"\n                connectionPoint={ConnectionPoint.ModulationCVOutput}\n                text=\"mod cv out\" />\n\n            <Section left={10} top={40} width={850} height={70} fill=\"url(#stripes)\" />\n        </Section>\n        <Section left={970} top={0} width={305} height={120}>\n            <Section left={0} top={0} width={305} height={30} label=\"EXTERNAL CV\" />\n            <Jack\n                x={55}\n                y={65}\n                color=\"var(--color-input)\"\n                connectionPoint={ConnectionPoint.PanelInput}\n                text=\"to panel\" />\n            <Jack\n                x={152.5}\n                y={65}\n                color=\"var(--color-keyboard-pressure)\"\n                connectionPoint={ConnectionPoint.Panel1Output}\n                id={0}\n                text=\"from panel 1\" />\n            <Jack\n                x={250}\n                y={65}\n                color=\"var(--color-keyboard-pressure)\"\n                connectionPoint={ConnectionPoint.Panel2Output}\n                text=\"from panel 2\" />\n        </Section>\n        <Section left={1275} top={0} width={300} height={120}>\n            <Section left={0} top={0} width={300} height={30} label=\"PRE AMP / ENVELOPE DETECTOR\" />\n            <Section left={10} top={40} width={180} height={70} fill=\"url(#stripes)\" />\n            <Jack\n                x={250}\n                y={65}\n                color=\"var(--color-sequencer)\"\n                connectionPoint={ConnectionPoint.EnvelopeDetectorOutput}\n                text=\"env det out\" />\n        </Section>\n    </Section>\n}","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { dispatchMakeConnection } from \"../store/dispatch\";\nimport { DragPoint, State } from \"../store/reducer\";\nimport { Connection } from \"../types\";\nimport { distance, toSVGCoordinate } from \"../util\";\nimport { Cable } from \"./cable\";\nimport { ConnectionPoint } from \"./jack\";\nimport { ComplexOscillatorView } from \"./modules/complexOscillator\";\nimport { DualLoPassGates } from \"./modules/dualLoPassGates\";\nimport { EnvelopeGenerator } from \"./modules/envelopeGenerator\";\nimport { ModulationOscillator } from \"./modules/modulationOscillator\";\nimport { Patchbay } from \"./modules/patchbay\";\nimport { Pulser } from \"./modules/pulser\";\nimport { Sequencer } from \"./modules/sequencer\";\nimport { TopBar } from \"./modules/topBar\";\n\nexport interface EaselProps {\n    dragPoints: DragPoint[];\n    connections: Connection[];\n    dispatchMakeConnection: (startPoint: ConnectionPoint, startId: number, endPoint: ConnectionPoint, endId: number) => void;\n}\n\nconst DRAG_RADIUS = 25;\n\nexport const EaselImpl = (props: EaselProps) => {\n    const { dragPoints, connections, dispatchMakeConnection } = props;\n\n    const [dragStart, setDragStart] = React.useState<DragPoint>();\n    const [dragEnd, setDragEnd] = React.useState<DOMPoint>();\n\n    let svgRef: SVGSVGElement;\n\n    const handleSVGRef = (ref: SVGSVGElement) => {\n        if (ref) svgRef = ref;\n    }\n\n    React.useEffect(() => {\n        const getDragPoint = (svgCoordinate: DOMPoint) => {\n            for (const point of dragPoints) {\n                if (distance(svgCoordinate.x, svgCoordinate.y, point.x, point.y) <= DRAG_RADIUS) {\n                    return point;\n                }\n            }\n        }\n\n        const onPointerDown = (ev: PointerEvent) => {\n            const point = toSVGCoordinate(svgRef, ev.clientX, ev.clientY);\n            const dragPoint = getDragPoint(point);\n\n            if (dragPoint) {\n                setDragStart(dragPoint);\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n        }\n\n        const onPointerUp = (ev: PointerEvent) => {\n            if (!dragStart) return;\n            const point = toSVGCoordinate(svgRef, ev.clientX, ev.clientY);\n            const dragPoint = getDragPoint(point);\n\n            if (dragPoint) {\n                dispatchMakeConnection(\n                    dragStart!.connectionPoint,\n                    dragStart!.id,\n                    dragPoint.connectionPoint,\n                    dragPoint.id\n                )\n            }\n\n            setDragStart(undefined);\n            setDragEnd(undefined);\n        }\n\n        const onPointerMove = (ev: PointerEvent) => {\n            if (!dragStart) return;\n\n            const point = toSVGCoordinate(svgRef, ev.clientX, ev.clientY);\n            setDragEnd(point);\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n\n        const onPointerLeave = (ev: PointerEvent) => {\n            setDragStart(undefined);\n            setDragEnd(undefined);\n        }\n\n        svgRef.addEventListener(\"pointerdown\", onPointerDown);\n        svgRef.addEventListener(\"pointerup\", onPointerUp);\n        svgRef.addEventListener(\"pointermove\", onPointerMove, true);\n        svgRef.addEventListener(\"pointerleave\", onPointerLeave);\n        \n        return () => {\n            svgRef.removeEventListener(\"pointerdown\", onPointerDown);\n            svgRef.removeEventListener(\"pointerup\", onPointerUp);\n            svgRef.removeEventListener(\"pointermove\", onPointerMove, true);\n            svgRef.removeEventListener(\"pointerleave\", onPointerLeave);\n        }\n    }, [dragStart, dragPoints]);\n\n    const takenColors: boolean[] = [];\n    const cables = connections.map((c, index) => {\n        const start = dragPoints.find(p => c.start.connectionPoint === p.connectionPoint && c.start.id === p.id);\n        const end = dragPoints.find(p => c.end.connectionPoint === p.connectionPoint && c.end.id === p.id);\n        takenColors[c.color] = true;\n        return <Cable\n            key={index}\n            x0={start!.x}\n            y0={start!.y}\n            x1={end!.x}\n            y1={end!.y}\n            colorIndex={c.color} />\n    })\n\n    let nextColor = takenColors.length;\n    for (let i = 0; i < takenColors.length; i++) {\n        if (!takenColors[i]) {\n            nextColor = i;\n            break;\n        }\n    }\n\n    return <svg viewBox=\"0 0 1580 900\" xmlns=\"http://www.w3.org/2000/svg\" ref={handleSVGRef}>\n        <defs>\n            <pattern id=\"stripes\"\n                    x=\"0\" y=\"0\" width=\"8\" height=\"8\"\n                    patternUnits=\"userSpaceOnUse\"\n                    patternTransform=\"rotate(-45)\" >\n\n                <rect\n                    x={0}\n                    y={0}\n                    width={1}\n                    height={8}\n                    fill=\"var(--color-outline)\" />\n\n            </pattern>\n        </defs>\n        <TopBar />\n        <Sequencer />\n        <EnvelopeGenerator />\n        <Pulser />\n        <ModulationOscillator />\n        <ComplexOscillatorView />\n        <DualLoPassGates />\n        <Patchbay />\n        { cables }\n        {dragStart &&\n            <Cable\n                x0={dragStart.x}\n                y0={dragStart.y}\n                x1={dragEnd ? dragEnd.x : dragStart.x}\n                y1={dragEnd ? dragEnd.y : dragStart.y}\n                colorIndex={nextColor}\n                />\n        }\n    </svg>\n}\n\nfunction mapStateToProps(state: State, ownProps: any) {\n    if (!state) return {};\n\n    return {\n        ...ownProps,\n        dragPoints: state.dragPoints,\n        connections: state.patch.connections\n    }\n}\n\nconst mapDispatchToProps = {\n    dispatchMakeConnection\n};\n\nexport const Easel = connect(mapStateToProps, mapDispatchToProps)(EaselImpl);","import React from 'react';\nimport './App.css';\nimport './styles/colors.css';\nimport { Easel } from './components/easel';\nimport store from './store/store';\nimport { encodePatch, throttle } from './util';\n\n// store.subscribe(throttle(() => {\n// \tconst current = store.getState().patch;\n// \twindow.location.replace(\"#\" + encodePatch(current))\n// }, 500))\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Easel />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ConnectionPoint } from \"../components/jack\";\nimport { Connection, ConnectionJack, Easel, EaselKind } from \"../types\";\nimport { emptyPatch } from \"../util\";\nimport { MAKE_CONNECTION, SET_DRAG_POINT, UPDATE_FADER, UPDATE_SWITCH } from \"./actions\";\n\nexport interface State {\n    patch: Easel;\n    dragPoints: DragPoint[];\n    kind: EaselKind;\n}\n\nexport interface DragPoint {\n    connectionPoint: ConnectionPoint;\n    id: number;\n    x: number;\n    y: number;\n}\n\nconst initialState: State = {\n    patch: emptyPatch(),\n    dragPoints: [],\n    kind: \"iprogram\"\n}\n\nexport function topReducer(state = initialState, action: any): State {\n    switch (action.type) {\n        case UPDATE_FADER:\n            return {\n                ...state,\n                patch: {\n                    ...state.patch,\n                    [action.module]: {\n                        ...state.patch[action.module as keyof Easel],\n                        [action.param]: Math.min(Math.max(action.value, 0), 0xfff)\n                    }\n                }\n            };\n        case UPDATE_SWITCH:\n            return {\n                ...state,\n                patch: {\n                    ...state.patch,\n                    [action.module]: {\n                        ...state.patch[action.module as keyof Easel],\n                        [action.param]: action.value\n                    }\n                }\n            };\n        case SET_DRAG_POINT:\n            return {\n                ...state,\n                dragPoints: setDragPoint(\n                    state.dragPoints,\n                    action.connectionPoint,\n                    action.id,\n                    action.x,\n                    action.y\n                )\n            };\n        case MAKE_CONNECTION:\n            return {\n                ...state,\n                patch: {\n                    ...state.patch,\n                    connections: makeConnection(\n                        state.patch.connections,\n                        action.startPoint,\n                        action.startId,\n                        action.endPoint,\n                        action.endId\n                    )\n                }\n            }\n    }\n\n    return state;\n}\n\n\nfunction setDragPoint(dragPoints: DragPoint[], connectionPoint: ConnectionPoint, id: number, x: number, y: number) {\n    const result = dragPoints.map(p => ({...p}));\n\n    for (const point of dragPoints) {\n        if (point.connectionPoint === connectionPoint && point.id === id) {\n            point.x = x;\n            point.y = y;\n            return result;\n        }\n    }\n\n    result.push({\n        connectionPoint,\n        id,\n        x,\n        y\n    });\n\n    return result;\n}\n\nfunction makeConnection(existing: Connection[], startPoint: ConnectionPoint, startId: number, endPoint: ConnectionPoint, endId: number) {\n    let start: ConnectionJack = {\n        connectionPoint: startPoint,\n        id: startId\n    }\n\n    let end: ConnectionJack = {\n        connectionPoint: endPoint,\n        id: endId\n    }\n\n    if (start.connectionPoint === end.connectionPoint) {\n        if (start.id > end.id) {\n            let swap = start;\n            start = end;\n            end = swap;\n        }\n    }\n    else if (start.connectionPoint > end.connectionPoint) {\n        let swap = start;\n        start = end;\n        end = swap;\n    }\n\n    const takenColors: boolean[] = [];\n    \n    for (const connection of existing) {\n        if (connection.start.connectionPoint === start.connectionPoint &&\n            connection.start.id === start.id &&\n            connection.end.connectionPoint === end.connectionPoint &&\n            connection.end.id === end.id) {\n                return existing;\n        }\n\n        takenColors[connection.color] = true;\n    }\n\n    let nextColor = takenColors.length;\n    for (let i = 0; i < takenColors.length; i++) {\n        if (!takenColors[i]) {\n            nextColor = i;\n            break;\n        }\n    }\n\n    return existing.slice().concat([{ start, end, color: nextColor }]);\n}","import { createStore } from 'redux';\n\nimport { topReducer } from './reducer';\n\nconst store = createStore(topReducer);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}